@model Training.Models.Select



@{
    ViewData["Title"] = "Create";

    var selectList = Model.Exercises.Select(o => new SelectListItem
            {
                Text = o.Title,
                Value = o.Title

            }).ToList();
}


<h1>Create</h1>

<h4>Select</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form">
                <label asp-for="Training.Exercise" class="control-label"></label>
                <select asp-for="Training.Exercise" class="form-control" asp-items="selectList"></select> 
                <span asp-validation-for="Training.Exercise" class="text-danger"></span>

                <label asp-for="Training.Date" class="control-label"></label>
                <input value="Date"  asp-for="Training.Date" />
                <span asp-validation-for="Training.Date" class="text-danger"></span>

                <label asp-for="Training.Distance" class="control-label"></label>
                <input type="number" value="Distance" asp-for="Training.Distance" />
                <span asp-validation-for="Training.Distance" class="text-danger"></span>

            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
<style>
    .form {
        display: flex;
        gap: 20px;
        flex-wrap: wrap;
        flex-direction: column
    }
</style>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
